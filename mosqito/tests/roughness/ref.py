# -*- coding: utf-8 -*-
"""
Created on Mon Oct 19 11:22:22 2020

@author: wantysal
"""

import numpy as np
import matplotlib.pyplot as plt


def ref_roughness(fc, fmod):
    """ Give the reference value for roughness by linear interpolation from the data
        given in E. Zwicker, H. Fastl: Psychoacoustics, 1990 (figure 11.2) 
        
        Parameters
        ----------
        fc: integer
            carrier frequency
        fmod: integer
            modulation frequency
            
        Output
        ------
        R_ref: float
            reference roughness value
        """

    if fc == 125:
        fm = np.array([ 11.406734,  22.52557 ,  25.691048,  26.840311,  28.660702,
                       30.85642 ,  33.764305,  35.55966 ,  38.48511 ,  40.74888 ,
                       42.793167,  44.937107,  47.446156,  49.41387 , 101.336945])

        R = np.array([0.10293284, 0.27182823, 0.31100854, 0.31965184, 0.33123672,
                      0.3441784 , 0.3459583 , 0.3430361 , 0.3372985 , 0.32534227,
                      0.31209344, 0.2944696 , 0.27706954, 0.2571405 , 0.07471167])


    if fc == 250:
        fm = np.array([ 11.375043,  27.74946 ,  30.126747,  31.823587,  34.170105,
                       36.388596,  39.497917,  40.92623 ,  43.459465,  45.397232,
                       48.070686,  51.45793 ,  55.079113,  56.748077,  59.108562,
                       62.403496,  65.52569 , 156.8228  ])

        R = np.array([0.10152393, 0.3699281 , 0.4039366 , 0.427935  , 0.45083532,
                      0.4684702 , 0.4854169 , 0.49208906, 0.49605963, 0.4918856 ,
                      0.482368  , 0.4678232 , 0.4438136 , 0.42577273, 0.4073222 ,
                      0.3748884 , 0.34791207, 0.07687955])
        
    if fc == 500:
        fm = np.array([ 11.406611,  28.760977,  31.570282,  34.559574,  38.776993,
                       43.620438,  46.578403,  50.421204,  52.960423,  56.085915,
                       58.7442  ,  63.22831 ,  66.9504  ,  68.98131 ,  72.83363 ,
                       76.270935,  80.30402 ,  83.863846, 228.00125 ])
        
        R = np.array([0.10264928, 0.40289837, 0.44973525, 0.5020224 , 0.5775975 ,
                      0.6358489 , 0.6570783 , 0.68273604, 0.6863788 , 0.693836  ,
                      0.6804404 , 0.6617317 , 0.6453573 , 0.6242688 , 0.5890037 ,
                      0.54965013, 0.50728613, 0.4720935 , 0.08595745])
        
    if fc == 1000:              
        fm = np.array([ 11.210676,  37.089394,  42.61789 ,  45.603157,  48.968876,
                       52.295155,  56.306377,  60.619404,  65.2607  ,  70.      ,
                       74.59246 ,  80.285446,  86.17377 ,  90.73637 ,  96.5827  ,
                       102.80353 , 108.52951 , 115.82172 , 125.62914 , 143.09247 ,
                       329.7389  ])

        R = np.array([0.1014365 , 0.587882  , 0.7035962 , 0.77971196, 0.8351465 ,
                      0.88716906, 0.94240147, 0.9765243 , 1.0035429 , 1.        ,
                      0.9920012 , 0.9620685 , 0.9228101 , 0.86589915, 0.7991257 ,
                      0.7334436 , 0.66763395, 0.5944383 , 0.51341456, 0.4172414 ,
                      0.10044643])
        
    if fc == 2000:
        fm = np.array([ 13.9677725,  33.06127  ,  36.69399  ,  39.301155 ,  42.205845 ,
                       47.744553 ,  51.269417 ,  55.35219  ,  57.828938 ,  66.11581  ,
                       70.39776  ,  74.5435   ,  78.92999  ,  83.57281  ,  88.24381  ,
                       93.42141  ,  98.63544  , 112.03673  , 325.9633   ])
        
        R = np.array([0.12136331, 0.42317444, 0.4895946 , 0.54656345, 0.60013855,
                      0.6866627 , 0.73955077, 0.7834202 , 0.80741674, 0.8551165 ,
                      0.85490245, 0.8383608 , 0.81311715, 0.78429455, 0.7482001 ,
                      0.69625634, 0.6515104 , 0.525111  , 0.08607212])
        
    if fc == 4000:
        fm = np.array([ 15.530166,  22.248001,  29.032803,  36.759804,  43.932583,
                       47.4362  ,  51.78351 ,  54.398357,  56.521927,  59.698368,
                       64.44473 ,  68.247986,  71.68033 ,  76.31692 ,  81.9177  ,
                       85.562874,  88.879105,  96.41964 , 100.693855, 115.63115 ,
                       294.5396  ])
        
        
        R = np.array([0.11014663, 0.18577282, 0.27380994, 0.38512465, 0.48521093,
                      0.52836967, 0.581726  , 0.6045137 , 0.6196158 , 0.6368079 ,
                      0.6544202 , 0.66153014, 0.6541425 , 0.6414714 , 0.6221224 ,
                      0.6034227 , 0.57728016, 0.5182279 , 0.48227614, 0.38976666,
                      0.07732382])

    if fc == 8000:
        fm = np.array([ 17.883463,  41.638683,  44.106934,  52.413486,  55.667343,
                       60.589725,  66.6696  ,  70.98513 ,  76.19545 ,  81.78732 ,
                       89.7085  ,  94.203926, 104.71086 , 122.207664, 216.48747 ])
        
        R = np.array([0.0900052 , 0.30700368, 0.33066767, 0.39099863, 0.4119403 ,
                      0.42801648, 0.44225395, 0.43849927, 0.4264474 , 0.41358426,
                      0.38059384, 0.36009377, 0.3033556 , 0.23456527, 0.08645088])

    return np.interp(fmod, fm, R)



# fmod     = np.array([10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110,120, 160,
#                      180, 200, 250, 300, 400])


# curve1 = np.interp(fmod,fm125,R125)
# curve2 = np.interp(fmod,fm250,R250) 
# curve3 = np.interp(fmod,fm500,R500)
# curve4 = np.interp(fmod,fm1000,R1000)
# curve5 = np.interp(fmod,fm2000,R2000)
# curve6 = np.interp(fmod,fm4000,R4000)
# curve7 = np.interp(fmod,fm8000,R8000)

# fig, axs = plt.subplots(2, 2)
# axs[0, 0].plot(fmod, curve1)
# axs[0, 0].plot(fmod, curve3)
# axs[0, 1].plot(fmod, curve5)
# axs[0, 1].plot(fmod, curve7)
# axs[1, 0].plot(fmod, curve4)
# axs[1, 1].plot(fmod, curve2)
# axs[1, 1].plot(fmod, curve6)


    
    
    
    
    
    
    
    
    
    

