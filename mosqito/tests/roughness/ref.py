# -*- coding: utf-8 -*-
"""
Created on Mon Oct 19 11:22:22 2020

@author: wantysal
"""

import numpy as np
import matplotlib.pyplot as plt


def ref_roughness(fc, fmod):
    """ Give the reference value for roughness by linear interpolation from the data
        given in E. Zwicker, H. Fastl: Psychoacoustics, 1990 (figure 11.2) 
        
        Parameters
        ----------
        fc: integer
            carrier frequency
        fmod: integer
            modulation frequency
            
        Output
        ------
        R_ref: float
            reference roughness value
        """

    if fc == 125:
        fm = np.array([ 11.320674,  21.970823,  24.331106,  25.77228 ,  27.801502,
                        29.831356,  31.347486,  32.429077,  35.616386,  38.407555,
                        40.773315,  42.723705,  46.29873 ,  50.558178, 100.85394 ])

        R = np.array([0.10152607, 0.26132664, 0.29006895, 0.3063978 , 0.32446954,
                      0.33473063, 0.34085318, 0.34529707, 0.3424573 , 0.33437043,
                      0.3230931 , 0.310582  , 0.28253472, 0.24710885, 0.07500888])


    if fc == 250:
        fm = np.array([ 11.439509,  27.74356 ,  30.087986,  32.038048,  35.0145  ,
                        37.96706 ,  41.273243,  43.594078,  45.3298  ,  48.881107,
                        53.121265,  54.943813,  56.827637,  59.387787,  64.01713 ,
                        73.04394 , 157.47661 ])

        R = np.array([0.10205483, 0.3669846 , 0.39998206, 0.426939  , 0.45447007,
                      0.47624823, 0.49128193, 0.49116743, 0.48724157, 0.47324988,
                      0.45366368, 0.43956152, 0.42367226, 0.40197152, 0.35809588,
                      0.28570408, 0.0772574 ])
        
    if fc == 500:
        fm = np.array([ 11.409495,  30.487507,  33.946957,  36.913254,  39.927513,
                        42.292023,  46.705784,  50.772938,  52.936295,  56.059425,
                        59.361572,  63.18659 ,  66.90265 ,  71.01811 ,  74.79408 ,
                        78.56848 ,  83.38223 ,  94.163795, 113.73634 , 149.61226 ,
                       228.0776  ])
        
        R = np.array([0.10152269, 0.4159882 , 0.48784226, 0.53730124, 0.58255917,
                      0.61374336, 0.65500504, 0.67568153, 0.6826773 , 0.68430084,
                      0.6717034 , 0.6593232 , 0.6337642 , 0.6012624 , 0.56008166,
                      0.5258434 , 0.47217426, 0.38673645, 0.2821931 , 0.1763591 ,
                      0.08655889])
        
    if fc == 1000:              
        fm = np.array([ 11.087001,  13.655874,  17.425774,  22.323097,  28.37367 ,
                        34.94905 ,  42.370758,  49.96757 ,  56.425716,  63.209957,
                        69.42832 ,  74.194626,  81.15967 ,  87.05505 ,  95.19742 ,
                       103.28752 , 112.92756 , 137.10373 , 160.75127 , 193.66571 ,
                       220.964   , 246.33324 , 284.3601  , 332.1115  ])

        R = np.array([0.10113691, 0.13728729, 0.19609652, 0.27899456, 0.39539358,
                      0.5409575 , 0.7005437 , 0.8453598 , 0.9321353 , 0.98051274,
                      0.99174285, 0.9837013 , 0.9491586 , 0.90162235, 0.80737907,
                      0.7173512 , 0.6151961 , 0.44188514, 0.34071133, 0.25057378,
                      0.19783457, 0.16634719, 0.13030091, 0.10086449])
        
    if fc == 2000:
        fm = np.array([ 14.026899,  16.03378 ,  19.51608 ,  24.1325  ,  27.152908,
                        33.18282 ,  42.67351 ,  48.009727,  51.526123,  55.798893,
                        58.02824 ,  63.2473  ,  68.39307 ,  73.18517 ,  78.91965 ,
                        85.31508 ,  94.640015,  97.87623 , 112.84719 , 116.1008  ,
                       134.20557 , 142.05911 , 176.54396 , 208.32822 , 247.7417  ,
                       325.8978  ])
        
        R = np.array([0.12057757, 0.14782797, 0.1944676 , 0.26501298, 0.31240755,
                      0.420769  , 0.5939494 , 0.68385667, 0.7424558 , 0.78007925,
                      0.7985556 , 0.8280814 , 0.8409192 , 0.8384773 , 0.8165356 ,
                      0.77257395, 0.68996763, 0.65123534, 0.5195601 , 0.49169108,
                      0.3902205 , 0.3513164 , 0.2457958 , 0.18558311, 0.13721035,
                      0.08642737])
        
    if fc == 4000:
        fm = np.array([ 15.561241,  22.401348,  29.266758,  36.86032 ,  38.84244 ,
                        43.589268,  47.646236,  51.401146,  56.619133,  59.81015 ,
                        63.843525,  67.08531 ,  70.85759 ,  74.06288 ,  77.41061 ,
                        81.33141 ,  87.916466,  97.7758  , 100.33316 , 115.681206,
                       119.01259 , 134.40422 , 148.2887  , 177.72102 , 205.42125 ,
                       235.5931  , 272.31946 , 296.5826  ])
        
        
        R = np.array([0.10967778, 0.18588823, 0.27217966, 0.3822299 , 0.40800852,
                      0.4784683 , 0.52834743, 0.5683734 , 0.6097778 , 0.6274577 ,
                      0.6473149 , 0.6522843 , 0.6521323 , 0.6452131 , 0.6333704 ,
                      0.62010473, 0.57756937, 0.51043147, 0.48305747, 0.38639748,
                      0.36280885, 0.29872113, 0.2538336 , 0.18619592, 0.1454662 ,
                      0.11394783, 0.08948974, 0.07725139])

    if fc == 8000:
        fm = np.array([ 17.80395 ,  23.941593,  34.73655 ,  41.949356,  44.321423,
                        51.991188,  55.790886,  61.60936 ,  66.79713 ,  70.92175 ,
                        76.48056 ,  82.46687 ,  90.54218 ,  94.376076, 105.48482 ,
                       109.09549 , 122.24679 , 143.51547 , 183.9545  , 219.89703 ])
        
        R = np.array([0.09006271, 0.1385833 , 0.23610486, 0.3065645 , 0.32895532,
                      0.3877164 , 0.40631378, 0.42686793, 0.43575785, 0.4356466 ,
                      0.42647484, 0.40776858, 0.3738506 , 0.35563606, 0.29824737,
                      0.2837258 , 0.2342281 , 0.17965466, 0.11587502, 0.08544585])

    return np.interp(fmod, fm, R)




# Check plots

# fmod     = np.array([10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110,120, 160,
#                       180, 200, 250, 300, 400])

# curve1 = ref_roughness(125, fmod)
# curve3 = ref_roughness(250, fmod)
# curve4 = ref_roughness(500, fmod)
# curve5 = ref_roughness(1000, fmod)
# curve6 = ref_roughness(2000, fmod)
# curve7 = ref_roughness(4000, fmod)
# curve2 = ref_roughness(8000, fmod)

# plt.figure()
# plt.plot(fmod,curve1)
# plt.plot(fmod,curve2)
# plt.plot(fmod,curve3)
# plt.plot(fmod,curve4)
# plt.plot(fmod,curve5)
# plt.plot(fmod,curve6)
# plt.plot(fmod,curve7)



    
    
    
    
    
    
    
    
    
    

